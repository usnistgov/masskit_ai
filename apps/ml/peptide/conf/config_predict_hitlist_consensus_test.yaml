
# the defaults list let you override settings using config files from subdirectories
# for models, specify the model name on the left hand side (which corresponds to a subdirectory)
# and the name on the right hand side specifies one of the config files in that subdirectory.
# This lets you have different sets of options for a model

# in the case of predict.py, the defaults will replace the configuration stored with the model

defaults:
  - input: 2022-04-18_nist # input data set
  - setup: single_gpu  # experiment setup parameters that are not typical hyperparameters
  - paths: standard  # places to look for data and code
  - ms: tandem  # mass spec parameters
  - override hydra/job_logging: default
  - _self_

hydra:
  run:
    # working directory
    dir: hydra_output/${hydra.job.name}/${now:%Y-%m-%d_%H-%M-%S}
  output_subdir: hydra
  sweep:
    dir: hydra_sweep
  searchpath:
    - pkg://masskit_ai.conf
  job:
    chdir: True

# for ensembles, add a list to model_ensemble of paths to the checkpoints
model_ensemble:
  - ${oc.env:HOME}/data/nist/aiomics/models/lyg_consensus_197d08bcab0f4025a05f55f57cf997cb_val_loss=-0.8464_epoch=052.ckpt
  - ${oc.env:HOME}/data/nist/aiomics/models/lyg_consensus_1b46febb0f7d41c8b9a96ccfa1c90ae2_val_loss=-0.8477_epoch=055.ckpt
  - ${oc.env:HOME}/data/nist/aiomics/models/lyg_consensus_2df3dc9a907848b5a509c68f66027830_val_loss=-0.8416_epoch=045.ckpt
  - ${oc.env:HOME}/data/nist/aiomics/models/lyg_consensus_50f016af93a440b8ad22ee0f5cb42f96_val_loss=-0.8515_epoch=046.ckpt
  - ${oc.env:HOME}/data/nist/aiomics/models/lyg_consensus_5a951a5d9d834ae1a7cada0c481bc11e_val_loss=-0.8465_epoch=051.ckpt
  - ${oc.env:HOME}/data/nist/aiomics/models/lyg_consensus_812f6418b30c41d1bb749bb807661b69_val_loss=-0.8483_epoch=053.ckpt
  - ${oc.env:HOME}/data/nist/aiomics/models/lyg_consensus_a8ce50c4a7fd48b1801369b421f75e24_val_loss=-0.8458_epoch=052.ckpt
  - ${oc.env:HOME}/data/nist/aiomics/models/lyg_consensus_cad2758d28814053ab3156430b14b0ec_val_loss=-0.8484_epoch=053.ckpt
model_draws: 1  # number of draws per model
hitlist_in: ${oc.env:HOME}/data/nist/aiomics/mq/test_combined_hitlist.pkl
num: 0  # number of spectra to predict
dropout: False  # turn on dropout
min_mz: 28 # minimum mz used to calculate the cosine score
min_intensity: 0.1 # minimum intensity of predicted spectrum (out of 999)
mz_window: 7  # window size for windowed noise filter.  0 = don't filter
l2norm: False  # L2 normalize the predicted spectra
predicted_column: predicted_spectrum
upres: True  # up resolution peptide spectra
output_prefix: ${oc.env:HOME}/data/nist/aiomics/mq/${now:%Y-%m-%d}_consensus_test_combined_hitlist  # name of the output file
set_to_load: test  # data set to do predictions on


# Information
#
# this configuration file is parsed by the hydra library.  See https://hydra.cc/ for info
#
# Notes:
# - environment variables can be retrieved via ${oc.env:MY_ENV_VARIABLE} notation
# - null values are translated to None values in python
# - values within the specification can be accessed via ${my_top_level.my_config_value} notation
#
# - Some hydra terminology:
#   - config:  a configuration file.  there are input configs arranged in a directory structure and one output config
#   - config_group : A path to a set of configs.
#       The path is relative to the containing config. It can be made absolute by prefixing it with a /.
#        The path separator is / regardless of the operating system.
#   - package : Where to place the content of the config within the output config. It is relative to the package of
#     the containing config by default.
#   - dot.notation: location of a key in the config
#
